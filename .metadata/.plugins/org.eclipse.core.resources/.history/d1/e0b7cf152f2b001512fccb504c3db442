
public class Codes {

	public static String importSTL(String file){
		return "import("+file+",3)";
	}
	public static String cube(float x, float y, float z){
		return "cube(["+x+","+y+","+z+"])";		
	}
	public static String cylinder(float r, float h){
		return "cylinder(r="+r+",h="+h+")";
	}
	public static String scale(float x, float y, float z, String scaled){
		return "scale(["+x+","+y+","+z+"]) "+scaled;
	}
	public static String translate(float x, float y, float z, String translated){
		return "translate(["+x+","+y+","+z+"]) "+translated;
	}
	public static String rotate(float x, float y, float z, String rotated){
		return "rotate(["+x+","+y+","+z+"]) "+rotated;
	}
	public static String endLine(String line){
		return line+";";
	}
	public static String multiLine(String[] lines){
		String result="";
		for(String line: lines){
			result+=Codes.endLine(line)+"\\n";
		}
		return result;
	}
	public static String union(String[] lines){
		return "union(){\\n"+Codes.multiLine(lines)+"}";
	}
	public static String difference(String[] lines){
		return "difference(){\\n"+Codes.multiLine(lines)+"}";
	}
	public static String intersection(String[] lines){
		return "intersection(){\\n"+Codes.multiLine(lines)+"}";
	}
	public static String minkowski(String[] lines){
		return "minkowski(){\\n"+Codes.multiLine(lines)+"}";
	}
	
	public static void main(String[] args){
		switch(Integer.parseInt(args[0])){
		case 0: //importStl
			break;
		case 1://cube
			break;
		case 2://cylinder
			break;
		case 3://scale
			break;
		case 4://translate
			break;
		case 5://rotate
			break;
		case 6://endline
			break;
		case 7://multiline
			break;
		case 8://union
			break;
		case 9://difference
			break;
		case 10://intersection
			break;
		case 11: //minkowski
			break;
		}
	}
	
	
}
