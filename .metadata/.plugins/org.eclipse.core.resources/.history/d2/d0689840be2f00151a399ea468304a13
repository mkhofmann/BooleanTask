import java.util.ArrayList;

public class Gauntlet extends Node{
	private float t;
	private DifferenceNode halfCut;
	private HullNode shell;
	
	Gauntlet(float th,float interval, int numIntervals, ArrayList<Float> circumfrances) {
		super(new ArrayList<Node>(1));
		t=th;
		ArrayList<Node> shells = new ArrayList<Node>(numIntervals);
		ArrayList<Node> cyls = new ArrayList<Node>(2);
		float r1 =0;
		float r2 =0;
		for(int i=0; i<numIntervals; i++){//build shells
			r1 = circumfrances.get(i)/((float) (2*Math.PI));
			r2 = circumfrances.get(i+1)/((float) (2*Math.PI));
			cyls.set(0, new CylinderModelNode(r1+t,r2+t,interval));//outer
			cyls.set(1, new CylinderModelNode(r1,r2,interval));//inner
			shells.set(i, new DifferenceNode(cyls));
		}
		shell = new HullNode(shells);//hull cylinders
		CubeModelNode cut = new CubeModel()
		super.addChild(halfCut);
	}
	@Override
	public String encode() {
		return halfCut.encode();
	}
	
}
